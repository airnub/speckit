name: SpecKit â€” PR Gate
on:
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  gate:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Read metrics
        id: metrics
        run: |
          if [ ! -f .speckit/metrics.json ]; then
            echo '{}' > .speckit/metrics.json
          fi
          echo "METRICS=$(cat .speckit/metrics.json | tr -d '\n')" >> $GITHUB_OUTPUT

      - name: Enforce thresholds
        run: |
          node <<'NODE'
          const m = JSON.parse(process.env.METRICS || '{}');
          const cov = m.ReqCoverage ?? 0;
          const tp1 = m.ToolPrecision1 ?? 0;
          const back = m.BacktrackRatio ?? 1;
          const failures = Array.isArray(m.FailureLabels) ? m.FailureLabels : [];
          const bad = failures.includes('process.read-before-write-fail') || failures.includes('env.git-state-drift');
          if (cov < 0.75 || tp1 < 0.65 || back > 0.35 || bad) {
            console.error('PR gate failed', { cov, tp1, back, bad, failures });
            process.exit(1);
          }
          NODE
        env:
          METRICS: ${{ steps.metrics.outputs.METRICS }}
